@using CMS.Mcp.Client.Security.Contracts.Providers

@inject IClaimStoreProvider ClaimStoreProvider
@{
    var versionId = typeof(Program).Assembly.GetName().Version.ToString().Replace(".", "_");

    var fullName = ClaimStoreProvider.FullName;
    var email = ClaimStoreProvider.Email;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Chat</title>
    <base href="/" />
    <link rel="icon" type="image/svg+xml" href="/mcp/images/logo-icon.svg">
    <link href="https://fonts.googleapis.com" rel="preconnect">
    <link href="https://fonts.gstatic.com" crossorigin rel="preconnect">
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css" rel="stylesheet">
    <link href="/mcp/css/site.css?v=@versionId" rel="stylesheet">
    <link href="/mcp/css/header.css?v=@versionId" rel="stylesheet">
    
    <style>
        /* Layout Structure for Fixed Header and Scrollable Content */
        body {
            display: flex;
            flex-direction: column;
            height: 100vh;
            margin: 0;
            padding: 0;
            overflow: hidden;
        }
        
        #header {
            flex: 0 0 auto;
            z-index: 1000;
        }
        
        #content-wrapper {
            flex: 1 1 auto;
            overflow-y: auto;
            position: relative;
            height: calc(100vh - 60px); /* Adjust based on header height */
        }
        
        /* Custom styles for profile dropdown */
        .profile-dropdown {
            width: 40% !important; /* Reduced width further */
            min-width: 200px;
            right: 0 !important;
            left: auto !important;
            position: absolute;
            background-color: #f8f9fa;
            border: 1px solid #d0d7de;
            box-shadow: 0 4px 10px rgba(32, 64, 102, 0.15);
        }
        .navbar-nav.ms-auto {
            margin-left: auto !important;
        }
        /* Add text ellipsis for overflow */
        .user-name, .user-email {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            max-width: 100%;
            display: block;
        }
        /* Styling for dropdown elements */
        .profile-dropdown .dropdown-header {
            background-color: #f0f4f8;
            border-bottom: 1px solid #e1e4e8;
            padding: 10px 12px;
        }
        .profile-dropdown .user-name {
            color: #24292e;
        }
        .profile-dropdown .user-email {
            color: #57606a;
        }
        .profile-dropdown .logout-link {
            color: #d73a49;
            text-decoration: none;
            font-weight: 500;
        }
        .profile-dropdown .logout-link:hover {
            text-decoration: underline;
            color: #cb2431;
        }
        .profile-dropdown .user-icon {
            color: #204066;
        }
        /* Profile icon styling */
        .profile-link {
            transition: all 0.2s ease;
            border-radius: 50%;
        }
        .profile-link:hover {
            background-color: rgba(32, 64, 102, 0.1);
        }
        .profile-link:active, 
        .profile-link[aria-expanded="true"] {
            background-color: rgba(32, 64, 102, 0.2);
        }
        
        /* Improve dropdown spacing */
        .profile-dropdown .dropdown-header {
            padding: 8px 12px;
        }
        
        .profile-dropdown .user-icon {
            font-size: 1.2rem;
            min-width: 24px;
        }
        
        .profile-dropdown .logout-link {
            white-space: nowrap;
            margin-left: 8px;
            font-size: 0.85rem;
        }
        

        
        .profile-dropdown .user-name {
            font-size: 0.85rem;
            font-weight: 500;
        }
        
        .profile-dropdown .user-email {
            font-size: 0.75rem;
            opacity: 0.8;
        }
    </style>
    
    @await RenderSectionAsync("Styles", required: false)
</head>

<body>
    <div id="header">
        <nav class="navbar navbar-expand-lg navbar-light">

            <div class="logo-container">
                <a href="@Url.Action("Index", "Chat")">
                    <img class="logo-icon"
                         src="/mcp/images/logo.svg"
                         alt="logo">
                </a>
                <span class="navbar-brand ms-3"></span>
            </div>

            <div class="navbar-nav ms-auto">
                <a class="nav-link @(ViewContext.RouteData.Values["controller"].ToString() == "Chat" ? "active" : "")" 
                   href="@Url.Action("Index", "Chat")" title="Chat">
                    <i class="fas fa-comments" aria-hidden="true"></i>
                </a>
                <a class="nav-link @(ViewContext.RouteData.Values["action"].ToString() == "GetMcpTools" ? "active" : "")" 
                   id="layoutMcpToolsBtn" href="javascript:void(0);" title="MCP Tools">
                    <i class="fas fa-tools" aria-hidden="true"></i>
                </a>
                <a class="nav-link profile-link" href="#" role="button"
                   id="profileDropdown" data-bs-toggle="dropdown"
                   aria-haspopup="true" aria-expanded="false">
                    <i class="fas fa-user"></i>
                </a>
                <ul class="dropdown-menu dropdown-menu-end profile-dropdown"
                    aria-labelledby="profileDropdown">
                    <li class="dropdown-header">
                        <div class="flex-container align-items-center w-100" style="justify-content: space-between; gap: 1rem;">
                            <div class="user-info flex-container align-items-center" style="gap: 0.5rem;">
                                <i class="fas fa-user-circle user-icon"></i>
                                <div class="user-details ms-2" style="width: auto;">
                                    <div class="user-name" title="@fullName">@fullName</div>
                                    <div class="user-email" title="@email">@email</div>
                                </div>
                            </div>
                            <a class="logout-link" id="logoutItem" href="/mcp/account/logout" style="display: flex; align-items: center; gap: 0.3rem; background: #f8f9fa; border-radius: 6px; padding: 4px 10px; box-shadow: 0 2px 8px rgba(32,64,102,0.07); transition: background 0.2s;">
                                <i class="fas fa-sign-out-alt me-1"></i> Logout
                            </a>
                        </div>
                    </li>
                </ul>
            </div>
        </nav>
    </div>

    <div id="content-wrapper">
        @RenderBody()
    </div>

    <div class="dialog-overlay" id="refreshModal" style="display: none">
        <div class="dialog-box">
            <h3>Session Expired</h3>
            <p>The session is no longer available or expired. Please click to refresh the page.</p>
            <div class="dialog-button-container">
                <button onclick="closeRefreshModal()">OK</button>
            </div>
        </div>
    </div>

    <div class="dialog-overlay" id="logoutModal" style="display: none">
        <div class="dialog-box">
            <h3>Session Expired</h3>
            <p>The session is no longer available or expired. Please click to logout from the page.</p>
            <div class="dialog-button-container">
                <button onclick="closeLogoutModal()">OK</button>
            </div>
        </div>
    </div>

    <div class="freeze-overlay" id="freeze-ui"></div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>
    <script>
        // Initialize tooltips
        document.addEventListener('DOMContentLoaded', function() {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[title]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)

    <script>
        function updateApplicationName(appName) {
            document.getElementById("applicationName").innerText = appName;
        }

        let isRefreshModalShown = false;
        let isLogoutModalShown = false;

        function showErrorModal(action) {
            if (action === 'refresh' && !isRefreshModalShown) {
                document.getElementById('refreshModal').style.display = 'flex';
                isRefreshModalShown = true;
            } else if (action === 'logout' && !isLogoutModalShown) {
                document.getElementById('logoutModal').style.display = 'flex';
                isLogoutModalShown = true;
            }
        }

        function closeRefreshModal() {
            document.getElementById('refreshModal').style.display = 'none';
            isRefreshModalShown = false;
            window.location.reload();
        }

        function closeLogoutModal() {
            document.getElementById('logoutModal').style.display = 'none';
            isLogoutModalShown = false;
            window.location = '/mcp/account/logout';
        }

        var checkSessionIntervalID;
        function checkSession() {
            fetch('/mcp/account/check-session', { method: 'GET', credentials: 'include' })
                .then(response => {
                    if (response.status === 200) {
                        console.log('Session is active.');
                    } else if (response.status === 401) {
                        // Session expired, perform logout instead of just showing modal
                        console.log('Session expired, logging out...');
                        window.location = '/mcp/account/logout';
                        clearInterval(checkSessionIntervalID);
                        checkSessionIntervalID = null;
                    }
                })
                .catch(error => {
                    console.error('Error checking session:', error);
                    // On error, also perform logout instead of showing modal
                    console.log('Session check error, logging out...');
                    window.location = '/mcp/account/logout';
                    clearInterval(checkSessionIntervalID);
                    checkSessionIntervalID = null;
                });
        }

        const pagesToCheck = ['/mcp/home', '/mcp/home/index'];

        if (pagesToCheck.includes(window.location.pathname)) {
            checkSessionIntervalID = setInterval(checkSession, 60000);
        }
    </script>
    
    <!-- Custom helper scripts -->
    <script>
        // Simple utility functions
        window.getBaseUrl = function() {
            return window.location.origin;
        };
    </script>
    
    <script>
        // Handle MCP Tools button click
        document.addEventListener('DOMContentLoaded', function() {
            const mcpToolsBtn = document.getElementById('layoutMcpToolsBtn');
            if (mcpToolsBtn) {
                mcpToolsBtn.addEventListener('click', function() {
                    // Get the currently selected server from the serverSelect dropdown if available
                    let selectedServer = '';
                    const serverSelect = document.getElementById('serverSelect');
                    if (serverSelect) {
                        selectedServer = serverSelect.value;
                    }
                    window.location.href = '@Url.Action("GetMcpTools", "Chat")' + (selectedServer ? '?serverName=' + encodeURIComponent(selectedServer) : '');
                });
            }
        });
    </script>
</body>
</html>
